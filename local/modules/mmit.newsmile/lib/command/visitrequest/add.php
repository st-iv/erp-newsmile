<?

namespace Mmit\NewSmile\Command\VisitRequest;

use Bitrix\Main\Entity\Field;
use Mmit\NewSmile\Command\OrmEntityAdd;
use Mmit\NewSmile\Command\Visit\GetUnitedList;
use Mmit\NewSmile\Notice;
use Mmit\NewSmile\Application;
use Mmit\NewSmile\Visit\VisitRequestTable;

class Add extends OrmEntityAdd
{
    public function getDescription()
    {
        return 'Добавляет новую завявку на приём от имени текущего пользователя, помимо id возвращает остальные поля созданной заявки, в тч позицию в общем списке заявок и приёмов (visit/get-united-list)';
    }

    protected function doExecute()
    {
        /* родительский метод добавляет новую заявку на приём в бд */
        parent::doExecute();

        /* уведомление администратору о новой заявке на приём */

        $notice = new Notice\NewVisitRequest([
            'VISIT_REQUEST_ID' => $this->result['primary']['id']
        ]);
        $notice->push(['admin']);

        /* получаем параметры новой заявки, в тч list_position, для чего используем команду GetUnitedList */

        $unitedListParams = [
            'is_active' => true
        ];

        if($this->params['order'])
        {
            $unitedListParams['order'] = $this->params['order'];
        }

        $command = new GetUnitedList($unitedListParams);

        $command->execute();
        $unitedListResult = $command->getResult();

        foreach ($unitedListResult['visit_list'] as $visitItem)
        {
            if($visitItem['is_visit_request'] && ($visitItem['id'] == $this->result['primary']['id']))
            {
                unset($visitItem['is_date_change_queried']);
                unset($visitItem['new_date']);

                $this->result = array_merge($this->result, $visitItem);
            }
        }
    }

    protected function getOrmEntity()
    {
        return VisitRequestTable::getEntity();
    }

    protected function filterField(Field $field)
    {
        return !in_array($field->getName(), ['PATIENT_ID', 'STATUS']);
    }

    protected function getParamNameByField(Field $field)
    {
        return strtolower($field->getName());
    }

    protected function getFieldsValues()
    {
        $values = parent::getFieldsValues();
        $values['PATIENT_ID'] = Application::getInstance()->getUser()->getId();
        return $values;
    }

    public function getParamsMap()
    {
        $paramsMap = parent::getParamsMap();
        $paramsMap[] = GetUnitedList::getParam('order');
        return parent::getParamsMap(); // TODO: Change the autogenerated stub
    }
}