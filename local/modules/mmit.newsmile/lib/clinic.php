<?php
/**
 * Created by PhpStorm.
 * User: niki_
 * Date: 30.05.2018
 * Time: 16:19
 */
namespace Mmit\NewSmile;

use Bitrix\Catalog\GroupTable;
use Bitrix\Main\Entity;
use Bitrix\Main\Loader;
use Bitrix\Main\Localization\Loc;
use Bitrix\Main\Type\Date;

Loc::loadMessages(__FILE__);

class ClinicTable extends Entity\DataManager
{
    public static function getTableName()
    {
        return 'm_newsmile_clinic';
    }

    public static function getMap()
    {
        return array(
            new Entity\IntegerField('ID', array(
                'autocomplete' => true,
                'primary' => true,
                'title' => 'ID',
            )),
            new Entity\DatetimeField('TIMESTAMP_X', array(
                'title' => 'Дата создания',
                'default_value' => Date::createFromTimestamp(time())
            )),
            new Entity\StringField('NAME', array(
                'required' => true,
                'title' => 'Название',
                'default_value' => function () {
                    return 'Без названия';
                },
                'validation' => function () {
                    return array(
                        new Entity\Validator\Length(null, 255),
                    );
                },
            )),
            new Entity\IntegerField('CATALOG_GROUP_ID', [
                'title' => 'Тип цен',
                'default_value' => 0
            ])


        );
    }

    public static function add(array $data)
    {
        if (Loader::includeModule('catalog')) {
            if (empty($data['CATALOG_GROUP_ID'])) {
                $result = GroupTable::add([
                    'NAME' => 'Price ' . $data['NAME'],
                    'BASE' => 'N',
                    'SORT' => 100
                ]);
                if ($result->isSuccess()) {
                    $data['CATALOG_GROUP_ID'] = $result->getId();
                } else {
                    return $result->getErrorMessages();
                }
            }
        } else {
            return ['Class Catalog not found'];
        }

        return parent::add($data); // TODO: Change the autogenerated stub
    }

    /**
     * Метод возвращает ID тип цен для текущей клиники
     *
     * @return int
     */
    public static function getCatalogGroupFromClinic()
    {
        $rsResult = self::getList([
            'filter' => [
                'ID' => $_SESSION['CLINIC_ID']
            ]
        ]);
        if ($arResult = $rsResult->fetch()) {
            return $arResult['CATALOG_GROUP_ID'];
        }
        return 0;
    }
}
